// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: crag.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Crag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Bounds        *Bounds                `protobuf:"bytes,4,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Center        *Coordinate            `protobuf:"bytes,5,opt,name=center,proto3" json:"center,omitempty"`
	DefaultZoom   int32                  `protobuf:"varint,6,opt,name=default_zoom,json=defaultZoom,proto3" json:"default_zoom,omitempty"`
	MinZoom       int32                  `protobuf:"varint,7,opt,name=min_zoom,json=minZoom,proto3" json:"min_zoom,omitempty"`
	MaxZoom       int32                  `protobuf:"varint,8,opt,name=max_zoom,json=maxZoom,proto3" json:"max_zoom,omitempty"`
	Parking       *Parking               `protobuf:"bytes,9,opt,name=parking,proto3" json:"parking,omitempty"`
	Areas         []*Area                `protobuf:"bytes,10,rep,name=areas,proto3" json:"areas,omitempty"`
	Commentable   *Commentable           `protobuf:"bytes,11,opt,name=commentable,proto3" json:"commentable,omitempty"`
	Photoable     *Photoable             `protobuf:"bytes,12,opt,name=photoable,proto3" json:"photoable,omitempty"`
	Trail         *Trail                 `protobuf:"bytes,13,opt,name=trail,proto3" json:"trail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Crag) Reset() {
	*x = Crag{}
	mi := &file_crag_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crag) ProtoMessage() {}

func (x *Crag) ProtoReflect() protoreflect.Message {
	mi := &file_crag_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crag.ProtoReflect.Descriptor instead.
func (*Crag) Descriptor() ([]byte, []int) {
	return file_crag_proto_rawDescGZIP(), []int{0}
}

func (x *Crag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Crag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Crag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Crag) GetBounds() *Bounds {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *Crag) GetCenter() *Coordinate {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *Crag) GetDefaultZoom() int32 {
	if x != nil {
		return x.DefaultZoom
	}
	return 0
}

func (x *Crag) GetMinZoom() int32 {
	if x != nil {
		return x.MinZoom
	}
	return 0
}

func (x *Crag) GetMaxZoom() int32 {
	if x != nil {
		return x.MaxZoom
	}
	return 0
}

func (x *Crag) GetParking() *Parking {
	if x != nil {
		return x.Parking
	}
	return nil
}

func (x *Crag) GetAreas() []*Area {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *Crag) GetCommentable() *Commentable {
	if x != nil {
		return x.Commentable
	}
	return nil
}

func (x *Crag) GetPhotoable() *Photoable {
	if x != nil {
		return x.Photoable
	}
	return nil
}

func (x *Crag) GetTrail() *Trail {
	if x != nil {
		return x.Trail
	}
	return nil
}

var File_crag_proto protoreflect.FileDescriptor

const file_crag_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"crag.proto\x12\x02pb\x1a\n" +
	"area.proto\x1a\fbounds.proto\x1a\x11commentable.proto\x1a\x10coordinate.proto\x1a\rparking.proto\x1a\x0fphotoable.proto\x1a\vtrail.proto\"\xb9\x03\n" +
	"\x04Crag\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\"\n" +
	"\x06bounds\x18\x04 \x01(\v2\n" +
	".pb.BoundsR\x06bounds\x12&\n" +
	"\x06center\x18\x05 \x01(\v2\x0e.pb.CoordinateR\x06center\x12!\n" +
	"\fdefault_zoom\x18\x06 \x01(\x05R\vdefaultZoom\x12\x19\n" +
	"\bmin_zoom\x18\a \x01(\x05R\aminZoom\x12\x19\n" +
	"\bmax_zoom\x18\b \x01(\x05R\amaxZoom\x12%\n" +
	"\aparking\x18\t \x01(\v2\v.pb.ParkingR\aparking\x12\x1e\n" +
	"\x05areas\x18\n" +
	" \x03(\v2\b.pb.AreaR\x05areas\x121\n" +
	"\vcommentable\x18\v \x01(\v2\x0f.pb.CommentableR\vcommentable\x12+\n" +
	"\tphotoable\x18\f \x01(\v2\r.pb.PhotoableR\tphotoable\x12\x1f\n" +
	"\x05trail\x18\r \x01(\v2\t.pb.TrailR\x05trailB.Z,github.com/greghart/climbing-app/internal/pbb\x06proto3"

var (
	file_crag_proto_rawDescOnce sync.Once
	file_crag_proto_rawDescData []byte
)

func file_crag_proto_rawDescGZIP() []byte {
	file_crag_proto_rawDescOnce.Do(func() {
		file_crag_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crag_proto_rawDesc), len(file_crag_proto_rawDesc)))
	})
	return file_crag_proto_rawDescData
}

var file_crag_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_crag_proto_goTypes = []any{
	(*Crag)(nil),        // 0: pb.Crag
	(*Bounds)(nil),      // 1: pb.Bounds
	(*Coordinate)(nil),  // 2: pb.Coordinate
	(*Parking)(nil),     // 3: pb.Parking
	(*Area)(nil),        // 4: pb.Area
	(*Commentable)(nil), // 5: pb.Commentable
	(*Photoable)(nil),   // 6: pb.Photoable
	(*Trail)(nil),       // 7: pb.Trail
}
var file_crag_proto_depIdxs = []int32{
	1, // 0: pb.Crag.bounds:type_name -> pb.Bounds
	2, // 1: pb.Crag.center:type_name -> pb.Coordinate
	3, // 2: pb.Crag.parking:type_name -> pb.Parking
	4, // 3: pb.Crag.areas:type_name -> pb.Area
	5, // 4: pb.Crag.commentable:type_name -> pb.Commentable
	6, // 5: pb.Crag.photoable:type_name -> pb.Photoable
	7, // 6: pb.Crag.trail:type_name -> pb.Trail
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_crag_proto_init() }
func file_crag_proto_init() {
	if File_crag_proto != nil {
		return
	}
	file_area_proto_init()
	file_bounds_proto_init()
	file_commentable_proto_init()
	file_coordinate_proto_init()
	file_parking_proto_init()
	file_photoable_proto_init()
	file_trail_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crag_proto_rawDesc), len(file_crag_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crag_proto_goTypes,
		DependencyIndexes: file_crag_proto_depIdxs,
		MessageInfos:      file_crag_proto_msgTypes,
	}.Build()
	File_crag_proto = out.File
	file_crag_proto_goTypes = nil
	file_crag_proto_depIdxs = nil
}
