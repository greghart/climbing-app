// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: topogon_data.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopogonData_Direction int32

const (
	TopogonData_DIRECTION_UNSPECIFIED TopogonData_Direction = 0
	TopogonData_DIRECTION_UP          TopogonData_Direction = 1
	TopogonData_DIRECTION_RIGHT       TopogonData_Direction = 2
	TopogonData_DIRECTION_DOWN        TopogonData_Direction = 3
	TopogonData_DIRECTION_LEFT        TopogonData_Direction = 4
)

// Enum value maps for TopogonData_Direction.
var (
	TopogonData_Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "DIRECTION_UP",
		2: "DIRECTION_RIGHT",
		3: "DIRECTION_DOWN",
		4: "DIRECTION_LEFT",
	}
	TopogonData_Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"DIRECTION_UP":          1,
		"DIRECTION_RIGHT":       2,
		"DIRECTION_DOWN":        3,
		"DIRECTION_LEFT":        4,
	}
)

func (x TopogonData_Direction) Enum() *TopogonData_Direction {
	p := new(TopogonData_Direction)
	*p = x
	return p
}

func (x TopogonData_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopogonData_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_topogon_data_proto_enumTypes[0].Descriptor()
}

func (TopogonData_Direction) Type() protoreflect.EnumType {
	return &file_topogon_data_proto_enumTypes[0]
}

func (x TopogonData_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopogonData_Direction.Descriptor instead.
func (TopogonData_Direction) EnumDescriptor() ([]byte, []int) {
	return file_topogon_data_proto_rawDescGZIP(), []int{0, 0}
}

type TopogonData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Polygons      []*TopogonData_Label   `protobuf:"bytes,1,rep,name=polygons,proto3" json:"polygons,omitempty"`
	Lines         []*TopogonData_Line    `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopogonData) Reset() {
	*x = TopogonData{}
	mi := &file_topogon_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopogonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopogonData) ProtoMessage() {}

func (x *TopogonData) ProtoReflect() protoreflect.Message {
	mi := &file_topogon_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopogonData.ProtoReflect.Descriptor instead.
func (*TopogonData) Descriptor() ([]byte, []int) {
	return file_topogon_data_proto_rawDescGZIP(), []int{0}
}

func (x *TopogonData) GetPolygons() []*TopogonData_Label {
	if x != nil {
		return x.Polygons
	}
	return nil
}

func (x *TopogonData) GetLines() []*TopogonData_Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

// Sub-messages for internal representation of topogon data.
type TopogonData_Point struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float64                `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopogonData_Point) Reset() {
	*x = TopogonData_Point{}
	mi := &file_topogon_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopogonData_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopogonData_Point) ProtoMessage() {}

func (x *TopogonData_Point) ProtoReflect() protoreflect.Message {
	mi := &file_topogon_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopogonData_Point.ProtoReflect.Descriptor instead.
func (*TopogonData_Point) Descriptor() ([]byte, []int) {
	return file_topogon_data_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TopogonData_Point) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TopogonData_Point) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type TopogonData_Line struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*TopogonData_Point   `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Tension       float64                `protobuf:"fixed64,3,opt,name=tension,proto3" json:"tension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopogonData_Line) Reset() {
	*x = TopogonData_Line{}
	mi := &file_topogon_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopogonData_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopogonData_Line) ProtoMessage() {}

func (x *TopogonData_Line) ProtoReflect() protoreflect.Message {
	mi := &file_topogon_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopogonData_Line.ProtoReflect.Descriptor instead.
func (*TopogonData_Line) Descriptor() ([]byte, []int) {
	return file_topogon_data_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TopogonData_Line) GetPoints() []*TopogonData_Point {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *TopogonData_Line) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TopogonData_Line) GetTension() float64 {
	if x != nil {
		return x.Tension
	}
	return 0
}

type TopogonData_Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Point         *TopogonData_Point     `protobuf:"bytes,2,opt,name=point,proto3" json:"point,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Fill          string                 `protobuf:"bytes,4,opt,name=fill,proto3" json:"fill,omitempty"`
	Direction     TopogonData_Direction  `protobuf:"varint,5,opt,name=direction,proto3,enum=pb.TopogonData_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopogonData_Label) Reset() {
	*x = TopogonData_Label{}
	mi := &file_topogon_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopogonData_Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopogonData_Label) ProtoMessage() {}

func (x *TopogonData_Label) ProtoReflect() protoreflect.Message {
	mi := &file_topogon_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopogonData_Label.ProtoReflect.Descriptor instead.
func (*TopogonData_Label) Descriptor() ([]byte, []int) {
	return file_topogon_data_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TopogonData_Label) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TopogonData_Label) GetPoint() *TopogonData_Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *TopogonData_Label) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TopogonData_Label) GetFill() string {
	if x != nil {
		return x.Fill
	}
	return ""
}

func (x *TopogonData_Label) GetDirection() TopogonData_Direction {
	if x != nil {
		return x.Direction
	}
	return TopogonData_DIRECTION_UNSPECIFIED
}

var File_topogon_data_proto protoreflect.FileDescriptor

const file_topogon_data_proto_rawDesc = "" +
	"\n" +
	"\x12topogon_data.proto\x12\x02pb\"\x9d\x04\n" +
	"\vTopogonData\x121\n" +
	"\bpolygons\x18\x01 \x03(\v2\x15.pb.TopogonData.LabelR\bpolygons\x12*\n" +
	"\x05lines\x18\x02 \x03(\v2\x14.pb.TopogonData.LineR\x05lines\x1a#\n" +
	"\x05Point\x12\f\n" +
	"\x01x\x18\x01 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x01R\x01y\x1ae\n" +
	"\x04Line\x12-\n" +
	"\x06points\x18\x01 \x03(\v2\x15.pb.TopogonData.PointR\x06points\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\x12\x18\n" +
	"\atension\x18\x03 \x01(\x01R\atension\x1a\xab\x01\n" +
	"\x05Label\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12+\n" +
	"\x05point\x18\x02 \x01(\v2\x15.pb.TopogonData.PointR\x05point\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12\x12\n" +
	"\x04fill\x18\x04 \x01(\tR\x04fill\x127\n" +
	"\tdirection\x18\x05 \x01(\x0e2\x19.pb.TopogonData.DirectionR\tdirection\"u\n" +
	"\tDirection\x12\x19\n" +
	"\x15DIRECTION_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fDIRECTION_UP\x10\x01\x12\x13\n" +
	"\x0fDIRECTION_RIGHT\x10\x02\x12\x12\n" +
	"\x0eDIRECTION_DOWN\x10\x03\x12\x12\n" +
	"\x0eDIRECTION_LEFT\x10\x04B.Z,github.com/greghart/climbing-app/internal/pbb\x06proto3"

var (
	file_topogon_data_proto_rawDescOnce sync.Once
	file_topogon_data_proto_rawDescData []byte
)

func file_topogon_data_proto_rawDescGZIP() []byte {
	file_topogon_data_proto_rawDescOnce.Do(func() {
		file_topogon_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_topogon_data_proto_rawDesc), len(file_topogon_data_proto_rawDesc)))
	})
	return file_topogon_data_proto_rawDescData
}

var file_topogon_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_topogon_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_topogon_data_proto_goTypes = []any{
	(TopogonData_Direction)(0), // 0: pb.TopogonData.Direction
	(*TopogonData)(nil),        // 1: pb.TopogonData
	(*TopogonData_Point)(nil),  // 2: pb.TopogonData.Point
	(*TopogonData_Line)(nil),   // 3: pb.TopogonData.Line
	(*TopogonData_Label)(nil),  // 4: pb.TopogonData.Label
}
var file_topogon_data_proto_depIdxs = []int32{
	4, // 0: pb.TopogonData.polygons:type_name -> pb.TopogonData.Label
	3, // 1: pb.TopogonData.lines:type_name -> pb.TopogonData.Line
	2, // 2: pb.TopogonData.Line.points:type_name -> pb.TopogonData.Point
	2, // 3: pb.TopogonData.Label.point:type_name -> pb.TopogonData.Point
	0, // 4: pb.TopogonData.Label.direction:type_name -> pb.TopogonData.Direction
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_topogon_data_proto_init() }
func file_topogon_data_proto_init() {
	if File_topogon_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_topogon_data_proto_rawDesc), len(file_topogon_data_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_topogon_data_proto_goTypes,
		DependencyIndexes: file_topogon_data_proto_depIdxs,
		EnumInfos:         file_topogon_data_proto_enumTypes,
		MessageInfos:      file_topogon_data_proto_msgTypes,
	}.Build()
	File_topogon_data_proto = out.File
	file_topogon_data_proto_goTypes = nil
	file_topogon_data_proto_depIdxs = nil
}
