syntax = "proto3";

package pb;

import "area.proto";
import "bounds.proto";
import "comment.proto";
import "crag.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "polygon.proto";
import "trail.proto";

option go_package = "github.com/greghart/climbing-app/internal/pb";

// Enum for entities that can have comments
enum CommentableEntityType {
  COMMENTABLE_ENTITY_TYPE_UNSPECIFIED = 0;
  COMMENTABLE_ENTITY_TYPE_CRAG = 1;
  COMMENTABLE_ENTITY_TYPE_AREA = 2;
  COMMENTABLE_ENTITY_TYPE_BOULDER = 3;
  COMMENTABLE_ENTITY_TYPE_ROUTE = 4;
}

// Request for GetComments
message GetCommentsRequest {
  CommentableEntityType entity_type = 1;
  int64 entity_id = 2;
}

// Response for GetComments
message GetCommentsResponse {
  repeated Comment comments = 1;
}

// Request for CreateComment
message CreateCommentRequest {
  CommentableEntityType entity_type = 1;
  int64 entity_id = 2;
  string text = 3;
}

// Response for CreateComment
message CreateCommentResponse {
  Comment comment = 1;
}

// GetArea
message ReadAreaOptions {
  repeated string includes = 1;
}
message GetAreaRequest {
  int64 id = 1;
  ReadAreaOptions opts = 2;
}
message GetAreaResponse {
  Area area = 1;
}

// UpdateArea
message UpdateAreaRequest {
  int64 id = 1;
  google.protobuf.FieldMask field_mask = 2;
  string name = 3;
  string description = 4;
  Polygon polygon = 5;
  google.protobuf.Timestamp requested_at = 6;
}
message UpdateAreaResponse {
}

// GetCrag
message ReadCragOptions {
  repeated string includes = 1;
}
message GetCragResponse {
  Crag crag = 1;
}
message GetCragRequest {
  int64 id = 1;
  ReadCragOptions opts = 2;
}

// ListCrags
message ListCragsRequest {
  ReadCragOptions opts = 2;
}
message ListCragsResponse {
  repeated Crag crags = 1;
}

// UpdateCrag
message UpdateCragRequest {
  int64 id = 1;
  google.protobuf.FieldMask field_mask = 2;
  string name = 3;
  string description = 4;
  Trail trail = 5;
  Bounds bounds = 6;
  google.protobuf.Timestamp requested_at = 7;
}
message UpdateCragResponse {
}

service ClimbService {
  // Comments
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  // Areas
  rpc GetArea(GetAreaRequest) returns (GetAreaResponse);
  rpc UpdateArea(UpdateAreaRequest) returns (UpdateAreaResponse);

  // Crags
  rpc GetCrag(GetCragRequest) returns (GetCragResponse);
  rpc ListCrags(ListCragsRequest) returns (ListCragsResponse);
  rpc UpdateCrag(UpdateCragRequest) returns (UpdateCragResponse);

  // Comments
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
}
