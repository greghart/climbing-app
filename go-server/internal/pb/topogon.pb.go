// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: topogon.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Topogon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Data          *TopogonData           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	TopoId        int64                  `protobuf:"varint,4,opt,name=topo_id,json=topoId,proto3" json:"topo_id,omitempty"`
	AreaId        int64                  `protobuf:"varint,5,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	BoulderId     int64                  `protobuf:"varint,6,opt,name=boulder_id,json=boulderId,proto3" json:"boulder_id,omitempty"`
	RouteId       int64                  `protobuf:"varint,7,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Topogon) Reset() {
	*x = Topogon{}
	mi := &file_topogon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topogon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topogon) ProtoMessage() {}

func (x *Topogon) ProtoReflect() protoreflect.Message {
	mi := &file_topogon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topogon.ProtoReflect.Descriptor instead.
func (*Topogon) Descriptor() ([]byte, []int) {
	return file_topogon_proto_rawDescGZIP(), []int{0}
}

func (x *Topogon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topogon) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Topogon) GetData() *TopogonData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Topogon) GetTopoId() int64 {
	if x != nil {
		return x.TopoId
	}
	return 0
}

func (x *Topogon) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *Topogon) GetBoulderId() int64 {
	if x != nil {
		return x.BoulderId
	}
	return 0
}

func (x *Topogon) GetRouteId() int64 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

var File_topogon_proto protoreflect.FileDescriptor

const file_topogon_proto_rawDesc = "" +
	"\n" +
	"\rtopogon.proto\x12\x02pb\x1a\x12topogon_data.proto\"\xc0\x01\n" +
	"\aTopogon\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12#\n" +
	"\x04data\x18\x03 \x01(\v2\x0f.pb.TopogonDataR\x04data\x12\x17\n" +
	"\atopo_id\x18\x04 \x01(\x03R\x06topoId\x12\x17\n" +
	"\aarea_id\x18\x05 \x01(\x03R\x06areaId\x12\x1d\n" +
	"\n" +
	"boulder_id\x18\x06 \x01(\x03R\tboulderId\x12\x19\n" +
	"\broute_id\x18\a \x01(\x03R\arouteIdB.Z,github.com/greghart/climbing-app/internal/pbb\x06proto3"

var (
	file_topogon_proto_rawDescOnce sync.Once
	file_topogon_proto_rawDescData []byte
)

func file_topogon_proto_rawDescGZIP() []byte {
	file_topogon_proto_rawDescOnce.Do(func() {
		file_topogon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_topogon_proto_rawDesc), len(file_topogon_proto_rawDesc)))
	})
	return file_topogon_proto_rawDescData
}

var file_topogon_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_topogon_proto_goTypes = []any{
	(*Topogon)(nil),     // 0: pb.Topogon
	(*TopogonData)(nil), // 1: pb.TopogonData
}
var file_topogon_proto_depIdxs = []int32{
	1, // 0: pb.Topogon.data:type_name -> pb.TopogonData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_topogon_proto_init() }
func file_topogon_proto_init() {
	if File_topogon_proto != nil {
		return
	}
	file_topogon_data_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_topogon_proto_rawDesc), len(file_topogon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_topogon_proto_goTypes,
		DependencyIndexes: file_topogon_proto_depIdxs,
		MessageInfos:      file_topogon_proto_msgTypes,
	}.Build()
	File_topogon_proto = out.File
	file_topogon_proto_goTypes = nil
	file_topogon_proto_depIdxs = nil
}
