// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file climb.proto (package pb, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Crag } from "./crag_pb";
import { file_crag } from "./crag_pb";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Line } from "./line_pb";
import { file_line } from "./line_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file climb.proto.
 */
export const file_climb: GenFile = /*@__PURE__*/
  fileDesc("CgtjbGltYi5wcm90bxICcGIiIwoPUmVhZENyYWdPcHRpb25zEhAKCGluY2x1ZGVzGAEgAygJIj8KDkdldENyYWdSZXF1ZXN0EgoKAmlkGAEgASgDEiEKBG9wdHMYAiABKAsyEy5wYi5SZWFkQ3JhZ09wdGlvbnMiKQoPR2V0Q3JhZ1Jlc3BvbnNlEhYKBGNyYWcYASABKAsyCC5wYi5DcmFnIjUKEExpc3RDcmFnc1JlcXVlc3QSIQoEb3B0cxgCIAEoCzITLnBiLlJlYWRDcmFnT3B0aW9ucyIsChFMaXN0Q3JhZ3NSZXNwb25zZRIXCgVjcmFncxgBIAMoCzIILnBiLkNyYWcikAEKEVVwZGF0ZUNyYWdSZXF1ZXN0EgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSMAoFdHJhaWwYAyABKAsyIS5wYi5VcGRhdGVDcmFnUmVxdWVzdC5VcGRhdGVUcmFpbBomCgtVcGRhdGVUcmFpbBIXCgVsaW5lcxgBIAMoCzIILnBiLkxpbmUyfAoMQ2xpbWJTZXJ2aWNlEjIKB0dldENyYWcSEi5wYi5HZXRDcmFnUmVxdWVzdBoTLnBiLkdldENyYWdSZXNwb25zZRI4CglMaXN0Q3JhZ3MSFC5wYi5MaXN0Q3JhZ3NSZXF1ZXN0GhUucGIuTGlzdENyYWdzUmVzcG9uc2VCLlosZ2l0aHViLmNvbS9ncmVnaGFydC9jbGltYmluZy1hcHAvaW50ZXJuYWwvcGJiBnByb3RvMw", [file_crag, file_google_protobuf_field_mask, file_line]);

/**
 * @generated from message pb.ReadCragOptions
 */
export type ReadCragOptions = Message<"pb.ReadCragOptions"> & {
  /**
   * @generated from field: repeated string includes = 1;
   */
  includes: string[];
};

/**
 * Describes the message pb.ReadCragOptions.
 * Use `create(ReadCragOptionsSchema)` to create a new message.
 */
export const ReadCragOptionsSchema: GenMessage<ReadCragOptions> = /*@__PURE__*/
  messageDesc(file_climb, 0);

/**
 * @generated from message pb.GetCragRequest
 */
export type GetCragRequest = Message<"pb.GetCragRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: pb.ReadCragOptions opts = 2;
   */
  opts?: ReadCragOptions;
};

/**
 * Describes the message pb.GetCragRequest.
 * Use `create(GetCragRequestSchema)` to create a new message.
 */
export const GetCragRequestSchema: GenMessage<GetCragRequest> = /*@__PURE__*/
  messageDesc(file_climb, 1);

/**
 * @generated from message pb.GetCragResponse
 */
export type GetCragResponse = Message<"pb.GetCragResponse"> & {
  /**
   * @generated from field: pb.Crag crag = 1;
   */
  crag?: Crag;
};

/**
 * Describes the message pb.GetCragResponse.
 * Use `create(GetCragResponseSchema)` to create a new message.
 */
export const GetCragResponseSchema: GenMessage<GetCragResponse> = /*@__PURE__*/
  messageDesc(file_climb, 2);

/**
 * @generated from message pb.ListCragsRequest
 */
export type ListCragsRequest = Message<"pb.ListCragsRequest"> & {
  /**
   * @generated from field: pb.ReadCragOptions opts = 2;
   */
  opts?: ReadCragOptions;
};

/**
 * Describes the message pb.ListCragsRequest.
 * Use `create(ListCragsRequestSchema)` to create a new message.
 */
export const ListCragsRequestSchema: GenMessage<ListCragsRequest> = /*@__PURE__*/
  messageDesc(file_climb, 3);

/**
 * @generated from message pb.ListCragsResponse
 */
export type ListCragsResponse = Message<"pb.ListCragsResponse"> & {
  /**
   * @generated from field: repeated pb.Crag crags = 1;
   */
  crags: Crag[];
};

/**
 * Describes the message pb.ListCragsResponse.
 * Use `create(ListCragsResponseSchema)` to create a new message.
 */
export const ListCragsResponseSchema: GenMessage<ListCragsResponse> = /*@__PURE__*/
  messageDesc(file_climb, 4);

/**
 * @generated from message pb.UpdateCragRequest
 */
export type UpdateCragRequest = Message<"pb.UpdateCragRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: pb.UpdateCragRequest.UpdateTrail trail = 3;
   */
  trail?: UpdateCragRequest_UpdateTrail;
};

/**
 * Describes the message pb.UpdateCragRequest.
 * Use `create(UpdateCragRequestSchema)` to create a new message.
 */
export const UpdateCragRequestSchema: GenMessage<UpdateCragRequest> = /*@__PURE__*/
  messageDesc(file_climb, 5);

/**
 * @generated from message pb.UpdateCragRequest.UpdateTrail
 */
export type UpdateCragRequest_UpdateTrail = Message<"pb.UpdateCragRequest.UpdateTrail"> & {
  /**
   * @generated from field: repeated pb.Line lines = 1;
   */
  lines: Line[];
};

/**
 * Describes the message pb.UpdateCragRequest.UpdateTrail.
 * Use `create(UpdateCragRequest_UpdateTrailSchema)` to create a new message.
 */
export const UpdateCragRequest_UpdateTrailSchema: GenMessage<UpdateCragRequest_UpdateTrail> = /*@__PURE__*/
  messageDesc(file_climb, 5, 0);

/**
 * @generated from service pb.ClimbService
 */
export const ClimbService: GenService<{
  /**
   * @generated from rpc pb.ClimbService.GetCrag
   */
  getCrag: {
    methodKind: "unary";
    input: typeof GetCragRequestSchema;
    output: typeof GetCragResponseSchema;
  },
  /**
   * @generated from rpc pb.ClimbService.ListCrags
   */
  listCrags: {
    methodKind: "unary";
    input: typeof ListCragsRequestSchema;
    output: typeof ListCragsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_climb, 0);

